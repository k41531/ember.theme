{"version":3,"file":"component---src-pages-index-tsx-de365570c0b4086e33c9.js","mappings":"+KA4BMA,EACG,yDADHA,EAII,+JAJJA,EASG,gQASHC,EAAMC,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,gGAKHC,GAASD,EAAAA,EAAAA,SAAOD,GAAV,0EAAGC,CAAH,2CAGIF,GAOVI,IALQF,EAAAA,EAAAA,SAAOD,GAAV,yEAAGC,CAAH,2CAGKF,IAEAE,EAAAA,EAAAA,SAAOD,GAAV,2EAAGC,CAAH,2CAGGF,IAqCVK,EAAc,SAAC,GAAiE,QAAhEC,MAAAA,OAAgE,MAAxD,UAAwD,MAA7CC,MAAAA,OAA6C,MAArC,QAAqC,MAA5BC,OAAAA,OAA4B,MAAnB,QAAmB,EAC9EC,EAAaP,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,8DAECI,EACNC,EACCC,GAEZ,OACE,gBAACC,EAAD,KACE,gBAACL,EAAD,QC9GOM,EAEL,UAFKA,EAGJ,UAHIA,EAIL,UAJKA,EAOJ,UAPIA,EAQJ,UARIA,EASN,UATMA,EAYN,UAZMA,EAaJ,UAbIA,EAcH,UAdGA,EAeL,UAfKA,EAgBF,UAhBEA,EAiBL,UAjBKA,EAoBL,UChBFC,GAAcC,EAAAA,EAAAA,mBAAH,0HAOCF,EACwBA,EAAoBA,EAAqBA,GAGpE,SAASG,EAAT,GAA8B,IAAZC,EAAY,EAAZA,SAC/B,OACE,gBAAC,WAAD,KACE,gBAACH,EAAD,MACCG,GCZP,IAAMC,EAAUb,EAAAA,QAAAA,GAAAA,WAAH,0DAAGA,CAAH,6FAMIQ,GAEXM,EAAYd,EAAAA,QAAAA,IAAAA,WAAH,4DAAGA,CAAH,+FAQTe,EAAmBf,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,kDAMhBgB,EAAUhB,EAAAA,QAAAA,IAAAA,WAAH,0DAAGA,CAAH,gHAEaQ,GAsD1B,EA9CkB,WAChB,OACA,gBAACG,EAAD,KACE,4BACE,4CACA,gBAACE,EAAD,KACE,gBAACZ,EAAD,KACE,gBAACc,EAAD,KACE,wBAAME,MAAO,CAAEb,MAAOI,EAAYU,UAAU,SAAUC,QAAS,kBAA/D,YAIP,gBAACL,EAAD,KACC,2BACA,gBAACE,EAAD,KACE,gBAACb,EAAD,CAAaC,MAAOI,KAEtB,gBAACQ,EAAD,KACE,gBAACb,EAAD,CAAaC,MAAOI,IACpB,gBAACL,EAAD,CAAaC,MAAOI,IACpB,gBAACL,EAAD,CAAaC,MAAOI,IACpB,gBAACL,EAAD,CAAaC,MAAOI,IACpB,gBAACL,EAAD,CAAaC,MAAOI,IACpB,gBAACL,EAAD,CAAaC,MAAOI,KAEtB,gBAACQ,EAAD,KACI,gBAACb,EAAD,CAAaC,MAAOI,IACpB,gBAACL,EAAD,CAAaC,MAAOI,IACpB,gBAACL,EAAD,CAAaC,MAAOI,KAExB,gBAACQ,EAAD,KACI,gBAACb,EAAD,CAAaC,MAAOI,IACpB,gBAACL,EAAD,CAAaC,MAAOI,IACpB,gBAACL,EAAD,CAAaC,MAAOI,KAGxB,qBAAGS,MAAO,CAACG,QAAQ,OAAQC,WAAW,WAAtC","sources":["webpack://ember-site/./src/components/ElevatedBox.tsx","webpack://ember-site/./src/constants/index.ts","webpack://ember-site/./src/components/Layout.tsx","webpack://ember-site/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\n\n// utils \nconst hex2hsl = (hex:string) => {\n  let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  let r = parseInt(result[1], 16);\n  let g = parseInt(result[2], 16);\n  let b = parseInt(result[3], 16);\n  r /= 255; g /= 255; b /= 255;\n    let max = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h:number, s:number, l:number = (max + min) / 2;\n    if(max == min){\n      h = s = 0; // achromatic\n    }else{\n      let d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch(max){\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\n        case g: h = (b - r) / d + 2; break;\n        case b: h = (r - g) / d + 4; break;\n      }\n      h /= 6;\n    }\n  return `${Math.round(h*360)}deg  ${Math.round(s*100)}%  ${Math.round(l*100)}%`;\n}\n\n// styles\nconst ELEVATIONS = {\n  small: `\n    0.5px 1px 1px hsl(var(--shadow-color) / 0.7)\n  `,\n  medium: `\n    1px 2px 2px hsl(var(--shadow-color) / 0.333),\n    2px 4px 4px hsl(var(--shadow-color) / 0.333),\n    3px 6px 6px hsl(var(--shadow-color) / 0.333)\n  `,\n  large: `\n    1px 2px 2px hsl(var(--shadow-color) / 0.2),\n    2px 4px 4px hsl(var(--shadow-color) / 0.2),\n    4px 8px 8px hsl(var(--shadow-color) / 0.2),\n    8px 16px 16px hsl(var(--shadow-color) / 0.2),\n    16px 32px 32px hsl(var(--shadow-color) / 0.2)\n  `\n}\n\nconst Box = styled.div`\n  --shadow-color: 0deg 0% 50%;\n  background: var(--box-color);\n  border-radius: var(--border-radius);\n`\nconst Subtle = styled(Box)`\n  width: 100%;\n  height: 100%;\n  box-shadow: ${ELEVATIONS.small};\n`\nconst Float = styled(Box)`\n  width: 100%;\n  height: 100%;\n  box-shadow: ${ELEVATIONS.medium};\n`\nconst Elevate = styled(Box)`\n  width: 100%;\n  height: 100%;\n  box-shadow: ${ELEVATIONS.large};\n`\ntype Props = {\n  color: string,\n  width?: string,\n  height?: string,\n}\n\nconst SubtleBox = ({color = 'inherit', width = '50px', height = '50px'}:Props) => {\n  const BoxWrapper = styled.div`\n    --border-radius: 8px;\n    --box-color: ${color};\n    width: ${width};\n    height: ${height};\n  `\n  return (\n    <BoxWrapper>\n      <Subtle />\n    </BoxWrapper>\n  )\n}\n\nconst FloatedBox = ({color = 'inherit', width = '70px', height = '70px'}:Props) => {\n  const BoxWrapper = styled.div`\n    --border-radius: 8px;\n    --box-color: ${color};\n    width: ${width};\n    height: ${height};\n  `\n  return (\n    <BoxWrapper>\n      <Elevate />\n    </BoxWrapper>\n  )\n}\n\n\nconst ElevatedBox = ({color = 'inherit', width = '100px', height = '100px'}:Props) => {\n  const BoxWrapper = styled.div`\n    --border-radius: 8px;\n    --box-color: ${color};\n    width: ${width};\n    height: ${height};\n  `\n  return (\n    <BoxWrapper>\n      <Elevate />\n    </BoxWrapper>\n  )\n};\n\nexport {Subtle,SubtleBox, FloatedBox, Float, ElevatedBox}\n","export const COLORS = {\n  // black colors\n  dark: '#202520',\n  black: '#333a33',\n  gray: '#4f594f',\n\n  // white colors\n  light: '#ecf5da',\n  white: '#e4edd3',\n  fog: '#d1d9c5',\n\n  // colorfull\n  red: '#d0918e',\n  green: '#6aaf8f',\n  yellow: '#b8b17a',\n  blue: '#989dd0',\n  magenta: '#bd89b7',\n  cyan: '#81a4c1',\n\n  // fire\n  fire: '#e37148'\n};\n\nexport const SIZES = [\n  8,\n  16,\n  24,\n  32,\n];\n","import React from \"react\"\nimport { createGlobalStyle } from \"styled-components\"\nimport { COLORS } from \"../constants\"\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    height: 100%;  \n  }\n  body {\n    margin: 0;\n    padding: 0;\n    background: ${COLORS.white};\n    background: linear-gradient(180deg, ${COLORS.light} 0%, ${COLORS.white} 70%, ${COLORS.fog} 100%);\n  }\n`\nexport default function Layout({ children }) {\n  return (\n    <React.Fragment>\n      <GlobalStyle />\n      {children}\n    </React.Fragment>\n  )\n}\n","import * as React from \"react\"\nimport styled from \"styled-components\"\nimport {Subtle, ElevatedBox} from \"../components/ElevatedBox\"\nimport Layout from \"../components/Layout\"\nimport {COLORS} from \"../constants\"\n\n// styles\nconst Heading = styled.h1`\n  font-family: \"Open Sans\";\n  font-style: bold;\n  margin: 0;\n  width: 100%;\n  height: 70px;\n  --box-color: ${COLORS.black};\n`\nconst Container = styled.div`\n  font-family: \"Open Sans\";\n  margin: 3rem auto;\n  max-width: 720px;\n  display: grid;\n  place-items: center;\n`\n\nconst HeadingContainer = styled.div`\n  display: flex;\n  height: 100%;\n  align-items: center;\n`\n\nconst Wrapper = styled.div`\n  --shadow-color: 0deg 0% 50%;\n  background-color: hsl(${COLORS.light});\n  display: flex;\n  align-items: center;\n  gap: 16px;\n  padding: 32px;\n`\n\n// markup\nconst IndexPage = () => {\n  return (\n  <Layout>\n    <main>\n      <title>Ember Theme</title>\n      <Heading>\n        <Subtle>\n          <HeadingContainer>\n            <span style={{ color: COLORS.fire,textAlign:'center', padding: '0 1rem 0.5rem' }}>Ember</span>\n          </HeadingContainer>\n        </Subtle>\n      </Heading>\n     <Container>\n      <div>\n      <Wrapper>\n        <ElevatedBox color={COLORS.fire}/>\n      </Wrapper>\n      <Wrapper>\n        <ElevatedBox color={COLORS.red}/>\n        <ElevatedBox color={COLORS.green}/>\n        <ElevatedBox color={COLORS.blue}/>\n        <ElevatedBox color={COLORS.yellow}/>\n        <ElevatedBox color={COLORS.magenta}/>\n        <ElevatedBox color={COLORS.cyan}/>\n      </Wrapper>\n      <Wrapper>\n          <ElevatedBox color={COLORS.light}/>\n          <ElevatedBox color={COLORS.white}/>\n          <ElevatedBox color={COLORS.fog}/>\n      </Wrapper>\n      <Wrapper>\n          <ElevatedBox color={COLORS.dark}/>\n          <ElevatedBox color={COLORS.black}/>\n          <ElevatedBox color={COLORS.gray}/>\n      </Wrapper>\n\n      <p style={{display:'grid', placeItems:'center'}}>\n        This color theme is in development.\n      </p>\n      </div>\n     </Container>\n    </main>\n  </Layout>\n  )\n}\n\nexport default IndexPage\n"],"names":["ELEVATIONS","Box","styled","Subtle","Elevate","ElevatedBox","color","width","height","BoxWrapper","COLORS","GlobalStyle","createGlobalStyle","Layout","children","Heading","Container","HeadingContainer","Wrapper","style","textAlign","padding","display","placeItems"],"sourceRoot":""}